<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        irxA94DlE1XmlSoER3OXnUjClSoAjmlSpUwP/9k=
</value>
  </data>
</root>